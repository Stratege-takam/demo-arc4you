@page "/Teachers"

@inject IStringLocalizer<Resources.TeacherPage> Localizer
@inject TeacherState state;
@implements IDisposable
@inject SwitchUserState userState;
@inject NavigationManager navigationManager

<NVStack Vertical StackItemCenter Class="w-responsive-lg" Gutter="8" P="8" MY="5">
    <NVPanel Level="2">
        <NVBlock MY="2" TextColor="petrol-500" TextSize="h-sm">List of teachers</NVBlock>

        <NVStack>
        <NVStackItemLead>
                <NVButton Small Level="2" Color="secondary" LeadIcon="refresh"> Refresh </NVButton>
        </NVStackItemLead>
        <NVStackItemTail>
                <NVButton Small Color="secondary" LeadIcon="plus"> New teacher </NVButton>
        </NVStackItemTail>
        </NVStack>
        <NVTable Responsive>
            <NVTableHead>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Hire date</th>
                <th>Salary</th>
                <th></th>
            </NVTableHead>
            <NVTableBody>
                @if (state.LoadingRefresh)
                {
                    <tr>
                        <td colspan="5" class="align-center-r">
                            <NVLoader Size="lg" Color="secondary" Loading />
                        </td>
                    </tr>
                }
                else if(state.Teachers == null)
                {
                    <tr>
                        <td colspan="5" class="align-center-r">
                            List is empty
                        </td>
                    </tr>
                }
                else
                {
                    @foreach(var teacher in state.Teachers)
                    {
                        <tr>
                            <td data-table-heading="Firstname">
                                @teacher.FirstName
                                </td>
                            <td data-table-heading="Lastname">
                                @teacher.LastName
                                </td>
                            <td data-table-heading="Hire date" class="text-gray-800">
                                @teacher.HireDate.ToString("dd MMM yyyy")
                            </td>
                            <td data-table-heading="Salary">
                                @teacher.Salary €
                            </td>
                            <td>
                                <NVButton XSmall Level="2" Color="primary" Icon="edit" MR="2" />
                                <NVButton XSmall Level="2" Color="error" Icon="x" MR="2" />
                                <NVButton XSmall Level="2" Color="secondary" Icon="eye" MR="2" />
                            </td>
                        </tr>
                    }
                }
            </NVTableBody>
        </NVTable>
    </NVPanel>
</NVStack>


@code {
    public override Task SetParametersAsync(ParameterView parameters)
    {
        if (userState.CurrentRole != Utils.Enums.UserTypeEnum.Teacher)
        {
            navigationManager.NavigateTo(userState.GetRoute(AppRouteEnum.Home));
        }
        return base.SetParametersAsync(parameters);
    }
    #region Listener state change


    protected override void OnInitialized()
    {
        base.OnInitialized();
        state.Mont(async () => await InvokeAsync(StateHasChanged));
    }

    public void Dispose()
    {
        state.UnMont(async () => await InvokeAsync(StateHasChanged));
    }

    #endregion


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await state.RefreshList();
    }

}
