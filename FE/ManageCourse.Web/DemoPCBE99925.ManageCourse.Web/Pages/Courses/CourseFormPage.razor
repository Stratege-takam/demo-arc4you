@page "/Courses/Form"

@inject IStringLocalizer<Resources.CourseFormPage> Localizer

@inherits NVOverlayable;
@inject CourseState state;
@implements IDisposable

<NVPanel>
    <NVBlock>
        @if (state.PersistChange == ManageCourseService.Facade.Sdk.PersistChange.Update)
        {
            <NVText TextSize="h-sm" TextColor="petrol-500">Update Course </NVText>
        }
        else if (state.PersistChange == ManageCourseService.Facade.Sdk.PersistChange.Insert)
        {
            <NVText TextSize="h-sm" TextColor="petrol-500">New Course </NVText>
        }
        else
        {
            <NVText TextSize="h-sm" TextColor="petrol-500">Detail Course </NVText>
        }
    </NVBlock>


    <NVBlock>
        <EditForm OnValidSubmit="state.Submit" Model="state.Model">
            <DataAnnotationsValidator />

            <NVContainer>
                @if (state.SuccessSave)
                {
                    <NVAlert MB="2" Close Permanent Color="success">
                        <NVText Size="sm" Medium MB="1">Information</NVText>
                        <NVText Size="sm" MB="2">
                            Save as successfull !
                        </NVText>
                    </NVAlert>
                }
                @if (state.ErrorServer != null)
                {
                    <NVAlert MB="2" Close Permanent Color="error-100">
                        <NVText Size="sm" Medium MB="1">Error</NVText>
                        <NVText Size="sm" MB="2">
                            @state.ErrorServer
                        </NVText>
                    </NVAlert>
                }
                <NVBlock MB="2">
                    @if (state.PersistChange == ManageCourseService.Facade.Sdk.PersistChange.None)
                    {
                        <NVFieldText Name="Id" Readonly
                        @bind-Value="state.Model.Id"
                                     Label="Teacher identifier" />
                    }
                    else if (state.PersistChange == ManageCourseService.Facade.Sdk.PersistChange.Insert)
                    {
                        <NVFieldText Name="Id"
                        @bind-Value="state.Model.Id"
                                     Label="Teacher identifier" />
                    }
                </NVBlock>

                <NVBlock MB="2">
                    @if (state.PersistChange != ManageCourseService.Facade.Sdk.PersistChange.None)
                    {
                        <NVFieldText Name="Name"
                        @bind-Value="state.Model.Name"
                                     Label="Name" />
                    }
                    else
                    {
                        <NVFieldText Name="Name"
                        @bind-Value="state.Model.Name"
                                          Readonly
                                     Label="Name" />
                    }

                </NVBlock>

                <NVBlock MB="2">
                    @if (state.PersistChange != ManageCourseService.Facade.Sdk.PersistChange.None)
                    {

                       <NVFieldSelect
                           Name="Owner"
                        @bind-Value="state.Model.OwnerId">
                           @foreach(var owner in state.Owners){
                                <option value="@owner.Id"> @owner.FirstName @owner.LastName</option>
                           }
                        </NVFieldSelect>
                    }
                    else
                    {
                        <NVFieldSelect Name="Owner"
                                          Readonly
                        @bind-Value="state.Model.OwnerId">
                            @foreach (var owner in state.Owners)
                            {
                                <option value="@owner.Id"> @owner.FirstName @owner.LastName</option>
                            }
                        </NVFieldSelect>
                    }

                </NVBlock>

                <NVBlock MB="2">

                    @if (state.PersistChange != ManageCourseService.Facade.Sdk.PersistChange.None)
                    {
                        <NVFieldNumber Name="Unity"
                        @bind-Value="state.Model.Unity"
                                       Label="Unity" />
                    }
                    else
                    {
                        <NVFieldNumber Name="Unity"
                        @bind-Value="state.Model.Unity"
                                          Readonly
                                     Label="Unity" />
                    }
                </NVBlock>

                <NVBlock MB="2">
                    @if (state.PersistChange != ManageCourseService.Facade.Sdk.PersistChange.None)
                    {
                        <NVFieldTextArea Name="Description"
                        @bind-Value="state.Model.Description"
                                     Label="Description" />
                    }
                    else
                    {
                        <NVFieldTextArea Name="Description"
                        @bind-Value="state.Model.Description"
                                      Readonly
                                     Label="Description" />
                    }

                </NVBlock>
                @if (state.PersistChange != ManageCourseService.Facade.Sdk.PersistChange.None)
                {
                    <NVBlock Class="align-center-r-o">
                        @if (state.Loading)
                        {
                            <NVButton Disabled Type="submit" Size="sm"
                                      MR="2" Color="secondary">Submit </NVButton>

                            <NVLoader Color="secondary" Loading />
                        }
                        else
                        {
                            <NVButton Type="submit" Size="sm" MR="2"
                                      Color="secondary">Submit </NVButton>
                        }
                    </NVBlock>
                }
            </NVContainer>

        </EditForm>
    </NVBlock>


</NVPanel>


@code {



    #region Listener state change


    protected override void OnInitialized()
    {
        base.OnInitialized();
        state.Mont(async () => await InvokeAsync(StateHasChanged));
    }

    public void Dispose()
    {
        state.UnMont(async () => await InvokeAsync(StateHasChanged));
    }

    #endregion

    #region Lifecycle
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await state.RefreshOwners();
    }
    #endregion Lifecycle

    #region Private methods

    #endregion Private methods
}
